<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>750</x>
      <y>1050</y>
      <w>260</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>/AbstractField/
--
- board: Board
--
/+ isWalkable(): boolean/
/+ isWalkableForGhost(): boolean/
/+ draw(Graphics2d, int, int)/
/+ onPlayerEnter(Player)/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1360</y>
      <w>260</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>WalkableField
--
_- COLOR: Color_
_- RECT: Rectangle2D.Double_
- consumble_: boolean
--
+ isWalkable(): boolean
+ isWalkableForGhost(): boolean
+ draw(Graphics2d, int, int): void
+ onPlayerEnter(Player): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>110</x>
      <y>1170</y>
      <w>690</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>670.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>300</x>
      <y>1360</y>
      <w>260</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>WallField
--
_- COLOR: Color_
_- RECT: Rectangle2D.Double_
--
+ isWalkable(): boolean
+ isWalkableForGhost(): boolean
+ draw(Graphics2d, int, int): void
+ onPlayerEnter(Player): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>410</x>
      <y>1170</y>
      <w>440</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>420.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>610</x>
      <y>1360</y>
      <w>260</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>EnemyField
--
_- COLOR: Color_
_- RECT: Rectangle2D.Double_
--
+ isWalkable(): boolean
+ isWalkableForGhost(): boolean
+ draw(Graphics2d, int, int): void
+ onPlayerEnter(Player): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>900</x>
      <y>1360</y>
      <w>260</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>TeleportingField
--
- ownPos_: ConstVector2d
- target_: ConstVector2d
--
+ isWalkable(): boolean
+ isWalkableForGhost(): boolean
+ draw(Graphics2d, int, int): void
+ onPlayerEnter(Player): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>1170</y>
      <w>200</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>180.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>970</x>
      <y>1170</y>
      <w>70</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;190.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2600</x>
      <y>410</y>
      <w>340</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>ConstVector2d
--
_- EPSILON: double_
# x_: double
# y_: double
--
+ getX(): int
+ getY(): int
+ copy(): Vector2d
+ toString(): String
+ equals(ConstVector2d): boolean
_- DoubleEqualWithEpsilon(double, double): boolean_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2600</x>
      <y>680</y>
      <w>340</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>Vector2d
--

--
+ setX(double): void
+ setY(double): void
+ set(double, double): void
+ add(ConstVector2d): Vector2d
+ add(double, double): Vector2d
+ time(double): Vector2d
+ rot90(boolean): Vector2d</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2770</x>
      <y>590</y>
      <w>30</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1230</x>
      <y>1360</y>
      <w>380</w>
      <h>340</h>
    </coordinates>
    <panel_attributes>Player
--
_- PLAYER_SPEED: double_
_- COLOR: Color_
_- RECT: Rectangle2D.Double_
_- KEY_TO_DIRECTION: Map&lt;Integer, Direction&gt;_
- localCenter_: Vector2d
- board_: Board
- onPlayerMoveListeners_: List&lt;Runnable&gt;
- direction_: Direction
- nextDirection_: Direction
--
+ addPlayerMoveListeners(Runnable): void
+ getLocalCenter(): ConstVector2d
+ setLocalCenter(ConstVector2d): void
+ update(double): void
+ draw(Graphics2D): void
- couldMoveToDirection(Direction, double): boolean
- notifyListeners(): void
- moveToDirection(Direction, double): void
- getAmountToShove(Direction, ConstVector2d): double
- shoveToWall(Direction): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1160</x>
      <y>580</y>
      <w>480</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>Board
--
_- BLOCK_SIZE: int_
_- FONT: font_
_- MAX_THREAD_NO: int_
- fieldMatrix_: Matrix&lt;AbstractField&gt;
- entities_: ArrayList&lt;AbstractEntity&gt;
- keyboardManager_: KeyboardManager
- gameWon_: Boolean
- score_: int
--
+ paintComponent(Graphics): void
+ getField(ConstVector2d): AbstractField
+ playerConsumned(AbstractField): void
+ onPacmanMoved(): void
+ update(double): void
+ getKeyboardManager(): KeyboardManager
+ hasGameEnded(): boolean
- isInBoundaries(ConstVector2d): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1250</x>
      <y>500</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>JPanel</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1290</x>
      <y>520</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>860</x>
      <y>900</y>
      <w>390</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1..n</panel_attributes>
    <additional_attributes>370.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2420</x>
      <y>120</y>
      <w>260</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>KeyboardManager
--
- keyToPressed_: Map&lt;Integer, Boolean&gt;
--
+ keyTyped(KeyEvent): void
+ keyPressed(KeyEvent): void
+ keyReleased(KeyEvent): void
+ isDown(int): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2560</x>
      <y>0</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>/KeyListener/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2600</x>
      <y>20</y>
      <w>30</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2190</x>
      <y>530</y>
      <w>340</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>Matrix&lt;T&gt;
--
- data_: T[]
- width_: int
- height_: int
--
+ get(int, int): T
+ set(int, int, T): void
+ getWidth(): int
+ getHeight(): int
+ iterator(): Iterator&lt;T&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2320</x>
      <y>420</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>/Iterable&lt;T&gt;/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2360</x>
      <y>440</y>
      <w>30</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1920</x>
      <y>110</y>
      <w>280</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>MyFrame
--
- comboBox_: JComboBox
- resetButton_: JButton
- gbc_: GridBagConstraints
- keyboardManager_: KeyboardManager
- highscoreManager_: HighscoreManager
- board_: Board
--
- resetBoard(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1970</x>
      <y>10</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>JFrame</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1480</x>
      <y>250</y>
      <w>510</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>490.0;10.0;10.0;330.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2190</x>
      <y>170</y>
      <w>250</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;230.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1870</x>
      <y>420</y>
      <w>260</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>/IFieldMatrixFactory/
--

--
/+ create(Board): Matrix&lt;AbstractField&gt;/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1870</x>
      <y>580</y>
      <w>260</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>JsonMatrixFieldFactory
--
- filename_: String
--
+ create(Board): Matrix&lt;AbstractField&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1980</x>
      <y>480</y>
      <w>30</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1440</x>
      <y>120</y>
      <w>260</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>HighscoreManager
--
- levelNameToHighscore_: Map&lt;String, Integer&gt;
- levelName_: String
--
+ get(String): int
+ put(String, int): void
+ saveToFile(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2000</x>
      <y>30</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1690</x>
      <y>170</y>
      <w>250</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1580</x>
      <y>1070</y>
      <w>280</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>/AbstractEntity/
--

--
/+ update(double): void/
/+ draw(Graphics2D): void/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1410</x>
      <y>1150</y>
      <w>250</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1800</x>
      <y>1360</y>
      <w>380</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>/Ghost/
--
_- RECT: Rectangle2D.Double_
- player_: Player
- speed_: double
- color_: Color
- localCenter_: Vector2d
- board_: Board
- currentDirection_: Direction
--
+ setSpeed(double): void
+ getCurrentDirection(): Direction
+ setCurrentDirection(Direction direction): void
+ getLocalCenter(): ConstVector2d
+ draw(Grphics2D): void
- couldMoveToDirection(Direction, double): boolean
- moveToDirection(Direction, double): void
- searchForbiddenDirection(Direction): Direction
- moveToAvailableDirection(Direction, double): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1750</x>
      <y>1150</y>
      <w>250</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;230.0;210.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1290</x>
      <y>1850</y>
      <w>210</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Blinky
--
- time: double
--
+ algorithmBlinky(double): void
+ update(double): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1390</x>
      <y>1650</y>
      <w>460</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>440.0;10.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1520</x>
      <y>1850</y>
      <w>380</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Clyde
--

--
+ algorithmClyde(double): void
+ update(double): void
- manhattanMetric(ConstVector2d, ConstVector2d): double</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1610</x>
      <y>1650</y>
      <w>320</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>300.0;10.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1920</x>
      <y>1850</y>
      <w>380</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Inky
--

--
+ algorithmInky(double): void
+ update(double): void
- manhattanMetric(ConstVector2d, ConstVector2d): double
- ClydeBehaviours(double, Player): void
- BlinkyBehaviours(double, Player): void
- PinkyBehaviours(double, Player): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2010</x>
      <y>1650</y>
      <w>40</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2340</x>
      <y>1850</y>
      <w>380</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Pinky
--

--
+ algorithmInky(double): void
+ update(double): void
- manhattanMetric(ConstVector2d, ConstVector2d): double
- ClydeBehaviours(double, Player): void
- BlinkyBehaviours(double, Player): void
- PinkyBehaviours(double, Player): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2110</x>
      <y>1650</y>
      <w>350</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;330.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1520</x>
      <y>900</y>
      <w>210</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1..n</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;170.0</additional_attributes>
  </element>
</diagram>
